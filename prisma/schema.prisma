// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  name          String
  middleName    String
  surName       String
  phone         String   @unique
  password      String?
  role          Role     @default(USER)
  isApproved    Boolean  @default(false)
  isSubscribed  Boolean  @default(false)
  createdAt     DateTime @default(now())
}

model Product {
  id             Int        @id @default(autoincrement())
  category       Category 
  name           String?
  description    String?  
  season         Season?     
  brand          String?     
  price          Float      
  discount       Float?     
  color          String?    
  size           String?    
  insulation     String? 
  imageUrl       String?
  length         String?    
  storeIds       Int[]     
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model Article {
  id              Int        @id @default(autoincrement())
  title           String
  description     String
  section         Section     @default(USER)
  composition     Composition @default(LEFT)
  metaTitle       String
  metaDescription String
  imageUrl        String?
  isDeleted       Boolean   @default(false)
  draft           Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  userId          Int
  paragraphs      Paragraph[]  // Связь с абзацами
}

model Paragraph {
  id           Int      @id @default(autoincrement())
  articleId    Int
  title        String
  content      String
  isDeleted    Boolean   @default(false)
  imageUrl     String?
  order        Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  article      Article  @relation(fields: [articleId], references: [id])
}



enum Category {
  MEN
  WOMEN
  ACCESSORIES
  NEW_ARRIVALS
  SALE        
  PLUS_SIZE    
  MATERIALS     
}

enum Section {
  NEWS
  SEO
  USER
}

enum Composition {
  LEFT
  RIGHT
}

enum Season {
  SPRING_SUMMER
  DEMI_SEASON
  WINTER
}

enum Role {
  USER
  ADMIN
}



