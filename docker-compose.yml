networks:
  my_network:
    driver: bridge

services:
  postgres:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_USER: my_user
      POSTGRES_PASSWORD: my_password
      POSTGRES_DB: my_database
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network

  redis-service:
    image: redis:latest
    container_name: redis
    ports:
      - '6379:6379'
    networks:
      - my_network

  sms-service:
    build:
      context: .
      dockerfile: ./src/sms-service/Dockerfile
    container_name: sms_service
    ports:
      - '3002:3002'
    environment:
      KAFKA_BROKER: kafka:9093
    depends_on:
      - kafka
    networks:
      - my_network

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - '9093:9093'
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9093
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    depends_on:
      - zookeeper
    networks:
      - my_network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - '2181:2181'
    networks:
      - my_network

  user-service:
    build:
      context: .
      dockerfile: ./src/user-service/Dockerfile
    container_name: user_service
    ports:
      - '3001:3001'
    depends_on:
      - postgres
      - redis-service
      - kafka
    networks:
      - my_network

volumes:
  postgres_data:
  redis_data: